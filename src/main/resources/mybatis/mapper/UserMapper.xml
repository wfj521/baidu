<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.blog.mapper.user.UserMapper" >

    <select id="findUserName" resultType="string">
        select nickname as userName from sys_user
    </select>

    <select id="selectPowerKeyList" parameterType="int" resultType="string">
        select sp.percode from
        sys_user_role sur,
        sys_role_permission srp,
        sys_permission sp
        where sur.role_id=srp.role_id
        and srp.permission_id=sp.id
        and user_id=#{userId}
    </select>

    <select id="selectUserInfoByCode" resultType="user" parameterType="string" >
        select id as userId, account as userCode, nickname as userName,password,salt,user_image as userImage
         from sys_user
         where account=#{userCode}
    </select>

    <select id="findUserCount"  parameterType="map" resultType="int">
        select count(1) from  sys_user su where 1=1
        <include refid="userSql"></include>
    </select>

    <select id="findUserList" resultType="user">
        select su.id as userId,su.account as userCode,su.nickname as userName,
            su.password,su.create_time as createTime,su.user_image as userImage,
            GROUP_CONCAT(sr.name) as roleName
            from
            sys_user su,sys_role sr,sys_user_role sur
            where su.id=sur.user_id  and sr.id=sur.role_id
            <include refid="userSql"></include>
            group by su.nickname
        order by su.id asc limit #{start},#{end}
    </select>

    <sql id="userSql">

            <if test="user.userName!=null  and  user.userName!=''">
                and su.nickname like '%${user.userName}%'
            </if>

    </sql>

    <delete id="delUser" parameterType="string">
        delete from sys_user where id=#{id}
    </delete>

    <delete id="delUserRole" parameterType="string">
        delete from sys_user_role where user_id=#{id}
    </delete>

    <select id="getRoleList" resultType="role">
        select * from sys_role
    </select>

    <!-- 新增用户 -->
    <insert id="saveUser" parameterType="user" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user(account,password,nickname,user_image,mobile,create_time,salt)
		values(#{userCode},#{password},#{userName},#{userImage},#{mobile},#{createTime},#{salt})
	</insert>

    <!-- 批量新增：用户角色中间表insert into t_user_role(userid,roleid) values(3,2),(3,1),(3,4),(3,5)   -->
    <insert id="addUserRole" >
        insert into sys_user_role (user_id,role_id) values
        <foreach collection="arrId" item="ur" separator=",">
            (#{userId},#{ur})
        </foreach>
    </insert>

    <select id="getUserInfo" parameterType="int" resultType="user">
        select su.id as userId,su.account as userCode,su.nickname as userName,
            su.password,su.create_time as createTime,su.user_image as userImage,mobile,
            GROUP_CONCAT(sr.id) as userRole
            from
            sys_user su,sys_role sr,sys_user_role sur
            where su.id=sur.user_id  and sr.id=sur.role_id
			and su.id=#{userId}
    </select>

    <update id="edit" parameterType="user">
        update sys_user set account=#{userCode},nickname=#{userName},password=#{password},
        create_time=#{createTime},user_image=#{userImage},mobile=#{mobile}  where id=#{userId}
    </update>

    <select id="queryTreeList" resultType="tree">
         select sp.id,sp.name as text, sp.url as href, sp.parentid as pid from
        sys_user_role sur,
        sys_role_permission srp,
        sys_permission sp
        where sur.role_id=srp.role_id
        and srp.permission_id=sp.id
		and user_id=#{userId}
        and sp.parentid=#{id}
    </select>

    <select id="findUserList2" resultType="user">
        select id as userId,account as userCode,
            nickname as userName,
            password,create_time as createTime,
            user_image as userImage,
            mobile,salt  from  sys_user
    </select>
</mapper>